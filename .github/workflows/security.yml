name: Security

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    # Run security scans monthly at 2 AM UTC on the first Sunday of each month
    - cron: '0 2 1-7 * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'release' && (github.event.pull_request.draft == false || github.event_name == 'push' || github.event_name == 'schedule')
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit for vulnerabilities
        run: |
          echo "üîç Running pnpm audit for dependency vulnerabilities..."
          pnpm audit --audit-level high --json > audit-results.json || true

          # Check if there are any high/critical vulnerabilities
          if [ -f audit-results.json ]; then
            HIGH_VULN=$(cat audit-results.json | jq -r '.advisories | length')
            if [ "$HIGH_VULN" -gt 0 ]; then
              echo "‚ùå Found $HIGH_VULN high/critical vulnerabilities"
              echo "Full audit report:"
              pnpm audit --audit-level high
              exit 1
            else
              echo "‚úÖ No high/critical vulnerabilities found"
            fi
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
          category: 'trivy'
        continue-on-error: true

      - name: Security Scan Summary
        if: always()
        run: |
          echo "üîí Security scan completed with the following tools:"
          echo "   ‚úÖ pnpm audit - Node.js dependency vulnerabilities"
          echo "   ‚úÖ OSV-Scanner - Multi-ecosystem vulnerability database"
          echo "   ‚úÖ Trivy - Comprehensive security scanner"
          echo ""
          echo "üìä Results have been uploaded to GitHub Code Scanning"
          echo "üîç Check the Security tab for detailed vulnerability reports"

  osv-scanner:
    name: OSV-Scanner
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.0.2
    if: github.event_name != 'release' && (github.event.pull_request.draft == false || github.event_name == 'push' || github.event_name == 'schedule')
    with:
      scan-args: |-
        --lockfile=pnpm-lock.yaml
        --recursive
        ./
    permissions:
      actions: read
      contents: read
      security-events: write

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
