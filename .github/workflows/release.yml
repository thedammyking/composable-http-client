name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    # Allow manual release trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - name: Run Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [release-please]
    if: needs.release-please.outputs.release_created
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Run final tests before publishing
        run: |
          pnpm typecheck
          pnpm test:run

      - name: Publish to NPM
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release Assets
        run: |
          tar -czf composable-http-client-${{ needs.release-please.outputs.tag_name }}.tar.gz dist/

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./composable-http-client-${{ needs.release-please.outputs.tag_name }}.tar.gz
          asset_name: composable-http-client-${{ needs.release-please.outputs.tag_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Announce Release
        if: success()
        run: |
          echo "üéâ Successfully published version ${{ needs.release-please.outputs.tag_name }} to NPM!"
          echo "üì¶ Package: https://www.npmjs.com/package/composable-http-client"
          echo "üè∑Ô∏è Release: https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }}"
